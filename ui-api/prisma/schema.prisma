generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  name     String
  email    String   @id @unique
  password String?
  student  Student?
  teacher  Teacher?
}

model Student {
  id          Int          @id @default(autoincrement())
  experiments Experiment[]
  courses     Course[]
  requests    Request[]
  user        User         @relation(fields: [userEmail], references: [email])
  userEmail   String       @unique
}

model Teacher {
  id         Int      @id @default(autoincrement())
  courses    Course[]
  user       User     @relation(fields: [userEmail], references: [email])
  userEmail  String   @unique
  authorized Boolean
}

model Course {
  id          Int          @id @default(autoincrement())
  name        String
  teacher     Teacher?     @relation(fields: [teacherId], references: [userEmail])
  teacherId   String?
  students    Student[]
  requests    Request[]
  Experiment  Experiment[]
  startDate   String
  endDate     String
  description String
}

model Request {
  id           Int      @id @default(autoincrement())
  course       Course?  @relation(fields: [courseId], references: [id])
  courseId     Int?
  student      Student? @relation(fields: [studentEmail], references: [userEmail])
  studentEmail String?
  status       String
}

model Experiment {
  id             Int             @id @default(autoincrement())
  name           String
  experimentDate String
  experimentTime String
  timezone       String
  student        Student?        @relation(fields: [studentEmail], references: [userEmail])
  studentEmail   String?
  departmentLabs DepartmentLab[]
  course         Course?         @relation(fields: [courseId], references: [id])
  courseId       Int?
  modified       DateTime        @updatedAt
}

model DepartmentLab {
  id             String       @id
  departmentName String
  panelangle     Int
  current        Float
  voltage        Float
  power          Float
  uvaRadiation   Float
  radiation      Float
  experiment     Experiment?  @relation(fields: [experimentId], references: [id], onDelete: Cascade)
  experimentId   Int?
  efficiencyTest TestRecord[]
}

model TestRecord {
  id              Int            @id @default(autoincrement())
  current         Float
  voltage         Float
  power           Float
  city            String
  departmentlab   DepartmentLab? @relation(fields: [departmentlabId], references: [id], onDelete: Cascade)
  departmentlabId String?
}

model Radiation {
  id        Int    @id @default(autoincrement())
  date      String
  time      String
  radiation Float
  city      String
}

model UVARadiation {
  id           Int    @id @default(autoincrement())
  date         String
  time         String
  uvaRadiation Float
  city         String
}
